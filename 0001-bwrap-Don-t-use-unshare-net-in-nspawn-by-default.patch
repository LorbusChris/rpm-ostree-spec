From 6a7a3af76e1c1c91b449dd5358170ba9df09622c Mon Sep 17 00:00:00 2001
From: Colin Walters <walters@verbum.org>
Date: Fri, 10 Mar 2017 09:48:03 -0500
Subject: [PATCH] bwrap: Don't use --unshare-net in nspawn by default

This will fix rpm-ostree-in-mock-in-koji. The drawback is minor: post scripts
will have network access. But we're going to be testing the no-network case in
our Docker-based builds, so that's fine.
---
 scripts/bwrap-script-shell.sh |  6 +++++-
 src/libpriv/rpmostree-bwrap.c | 20 +++++++++++++++++++-
 2 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/scripts/bwrap-script-shell.sh b/scripts/bwrap-script-shell.sh
index 98cadb6..e368869 100755
--- a/scripts/bwrap-script-shell.sh
+++ b/scripts/bwrap-script-shell.sh
@@ -6,9 +6,13 @@ shift
 cd ${rootfs}
 # ⚠⚠⚠ If you change this, also update src/libpriv/rpmostree-scripts.c ⚠⚠⚠
 BWRAP_ARGV="--dev /dev --proc /proc --dir /tmp --chdir / \
-     --unshare-pid --unshare-net --unshare-uts \
+     --unshare-pid --unshare-uts \
      --unshare-ipc --unshare-cgroup-try \
 "
+if ! test "${container:-}" = "systemd-nspawn"; then
+    BWRAP_ARGV="$BWRAP_ARGV --unshare-net"
+fi
+
 for src in /sys/{block,bus,class,dev}; do
     BWRAP_ARGV="$BWRAP_ARGV --ro-bind $src $src"
 done
diff --git a/src/libpriv/rpmostree-bwrap.c b/src/libpriv/rpmostree-bwrap.c
index 9d40059..5258439 100644
--- a/src/libpriv/rpmostree-bwrap.c
+++ b/src/libpriv/rpmostree-bwrap.c
@@ -177,6 +177,22 @@ setup_rofiles_usr (RpmOstreeBwrap *bwrap,
   return ret;
 }
 
+/* nspawn by default doesn't give us CAP_NET_ADMIN; see
+ * https://pagure.io/releng/issue/6602#comment-71214
+ * https://pagure.io/koji/pull-request/344#comment-21060
+ *
+ * Theoretically we should do capable(CAP_NET_ADMIN)
+ * but that's a lot of ugly code, and the only known
+ * place we hit this right now is nspawn.  Plus
+ * we want to use userns down the line anyways where
+ * we'll regain CAP_NET_ADMIN.
+ */
+static gboolean
+running_in_nspawn (void)
+{
+  return g_strcmp0 (getenv ("container"), "systemd-nspawn") == 0;
+}
+
 RpmOstreeBwrap *
 rpmostree_bwrap_new (int rootfs_fd,
                      RpmOstreeBwrapMutability mutable,
@@ -209,12 +225,14 @@ rpmostree_bwrap_new (int rootfs_fd,
                                       * but it may need some mapping work.
                                       */
                                      "--unshare-pid",
-                                     "--unshare-net",
                                      "--unshare-uts",
                                      "--unshare-ipc",
                                      "--unshare-cgroup-try",
                                      NULL);
 
+  if (!running_in_nspawn ())
+    rpmostree_bwrap_append_bwrap_argv (ret, "--unshare-net", NULL);
+
   for (guint i = 0; i < G_N_ELEMENTS (usr_links); i++)
     {
       const char *subdir = usr_links[i];
-- 
2.9.3

